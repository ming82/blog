<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sf.blogserver.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.sf.blogserver.bean.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="answer_id" jdbcType="INTEGER" property="answerId" />
    <result column="comment_body" jdbcType="VARCHAR" property="commentBody" />
    <result column="publishDate" jdbcType="TIMESTAMP" property="publishdate" />
    <result column="comment_parentId" jdbcType="INTEGER" property="commentParentid" />
    <result column="comment_status" jdbcType="INTEGER" property="commentStatus" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, article_id, answer_id, comment_body, publishDate, comment_parentId, comment_status, 
    user_id
  </sql>
  <select id="selectByExample" parameterType="com.sf.blogserver.bean.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sf.blogserver.bean.Comment">
    insert into comment (comment_id, article_id, answer_id, 
      comment_body, publishDate, comment_parentId, 
      comment_status, user_id)
    values (#{commentId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{answerId,jdbcType=INTEGER}, 
      #{commentBody,jdbcType=VARCHAR}, #{publishdate,jdbcType=TIMESTAMP}, #{commentParentid,jdbcType=INTEGER}, 
      #{commentStatus,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sf.blogserver.bean.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="answerId != null">
        answer_id,
      </if>
      <if test="commentBody != null">
        comment_body,
      </if>
      <if test="publishdate != null">
        publishDate,
      </if>
      <if test="commentParentid != null">
        comment_parentId,
      </if>
      <if test="commentStatus != null">
        comment_status,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="answerId != null">
        #{answerId,jdbcType=INTEGER},
      </if>
      <if test="commentBody != null">
        #{commentBody,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null">
        #{publishdate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentParentid != null">
        #{commentParentid,jdbcType=INTEGER},
      </if>
      <if test="commentStatus != null">
        #{commentStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sf.blogserver.bean.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.sf.blogserver.bean.Comment">
    update comment
    <set>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="answerId != null">
        answer_id = #{answerId,jdbcType=INTEGER},
      </if>
      <if test="commentBody != null">
        comment_body = #{commentBody,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null">
        publishDate = #{publishdate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentParentid != null">
        comment_parentId = #{commentParentid,jdbcType=INTEGER},
      </if>
      <if test="commentStatus != null">
        comment_status = #{commentStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sf.blogserver.bean.Comment">
    update comment
    set article_id = #{articleId,jdbcType=INTEGER},
      answer_id = #{answerId,jdbcType=INTEGER},
      comment_body = #{commentBody,jdbcType=VARCHAR},
      publishDate = #{publishdate,jdbcType=TIMESTAMP},
      comment_parentId = #{commentParentid,jdbcType=INTEGER},
      comment_status = #{commentStatus,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>